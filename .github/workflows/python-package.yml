# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
    tags: '*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Build Distribution
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m setup sdist bdist_wheel
    - name: Install Test Dependencies
      run: |
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
        python -m pip install mypy
        python -m pip install flake8
        mypy --version
    - name: Type Checking
      run: |
        mypy --install-types --non-interactive --namespace-packages --ignore-missing-imports --follow-imports=silent \
          nion/swift/DataPanel.py \
          nion/swift/DocumentController.py \
          nion/swift/GeneratorDialog.py \
          nion/swift/Inspector.py \
          nion/swift/LineGraphCanvasItem.py \
          nion/swift/LinePlotCanvasItem.py \
          nion/swift/MetadataPanel.py \
          nion/swift/ScriptsDialog.py \
          nion/swift/ToolbarPanel.py \
          nion/swift/Workspace.py
        mypy --install-types --namespace-packages --ignore-missing-imports --follow-imports=silent --strict --no-warn-unused-ignores nion/swift/model
        flake8 --max-line-length=160 \
          nion/swift/GeneratorDialog.py \
          nion/swift/ScriptsDialog.py \
          nion/swift/model/FileStorageSystem.py \
          nion/swift/model/Model.py \
          nion/swift/model/Profile.py
    - name: Test
      run: |
        python -m unittest discover -p '*_test.py'
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      with:
        name: distribution
        path: dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@master
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
